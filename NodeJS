// Import dependencies
const express = require('express');
const bodyParser = require('body-parser');
const fetch = require('node-fetch');
const TelegramBot = require('node-telegram-bot-api');

// Initialize Express app
const app = express();
app.use(bodyParser.json());

// Your bot token, Make.com webhook URL, and Vercel URL
const botToken = "7160964981:AAF2ILMqsBoREb4hWS1QIt_-1e_ZWZWKK0I";
const makeHookUrl = "https://hook.us2.make.com/fq2o5mke7wrp1kwjlwc63st6qq50dg64";
const vercelUrl = "https://webhook-tg-dev-bot.vercel.app";

// Initialize the bot with your token
const bot = new TelegramBot(botToken, {polling: false});

// Function to forward message to Make.com
async function forwardToMake(msg) {
    const payload = {
        chatId: msg.chat.id,
        text: msg.text || "(no text)",
        from: msg.from.username || msg.from.id,
        messageId: msg.message_id
    };

    console.log("Payload being sent to Make.com:", payload); // Log for debugging

    try {
        const response = await fetch(makeHookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(payload),
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("Message forwarded successfully:", data);
    } catch (error) {
        console.error("Failed to forward message to Make.com:", error);
    }
}

// Handle incoming messages
bot.on('message', async (msg) => {
    const messageText = msg.text || "";
    
    if (messageText.startsWith("@AIPeanut_DevBot")) {
        console.log("Forwarding message to Make.com...");
        await forwardToMake(msg);
    } else {
        console.log("Non-filtered message received:", messageText);
    }
});

// Set the webhook for the bot
bot.setWebHook(`${vercelUrl}/bot${botToken}`);

// Webhook route for Vercel
app.post(`/bot${botToken}`, (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
});

// Health check endpoint for Vercel
app.get('/', (req, res) => {
    res.send('Bot is running!');
});

// Export the app for Vercel deployment
module.exports = app;

// If running locally, you can uncomment the next line to start the server
// app.listen(3000, () => { console.log('Server is running on port 3000'); });
